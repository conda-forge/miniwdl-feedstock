{% set name = "miniwdl" %}
{% set version = "0.2.2" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url: "https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz"
  sha256: 771a3dccecd6b0f195d27bf0586e1d2dd03ef4eae80265b770e79b35547306a7

build:
  noarch: python
  number: 1
  script: "{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv "
  entry_points:
    - miniwdl = WDL.CLI:main

requirements:
  host:
    - pip
    - pbr
    - python >=3.6
    - setuptools
    - docker-py
    - argcomplete
    - lark-parser 0.7.1

  run:
    - python >=3.6
    - setuptools
    - docker-py
    - argcomplete
    - lark-parser 0.7.1
    - wget
test:
  imports:
    - WDL
    - WDL.Env
    - WDL.Error
    - WDL.Expr
    - WDL.StdLib
    - WDL.Tree
    - WDL.Type
    - WDL.Value
    - WDL.Walker
  commands:
    - miniwdl --help

about:
  home: "https://github.com/chanzuckerberg/miniwdl"
  license: "MIT"
  license_family: "MIT"
  license_file: "LICENSE"
  summary: "A static analysis toolkit for the Workflow Description Language"
  description: >
    Miniwdl is a library for parsing WDL documents into a type-checked abstract
    syntax tree (AST), providing a foundation for new runtime systems, developer
    tooling, and language experimentation. It also includes command-line tools
    supporting the WDL development cycle, including a "linter" to statically
    analyze WDL documents for errors and oversights, and a Cromwell wrapper to
    make it more convenient to test a workflow locally.

extra:
  recipe-maintainers:
    - mlin
    - rhpvorderman
